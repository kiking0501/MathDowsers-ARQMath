{
  "Question": "<p>So... I had the silly idea to extend Knuth's up-arrow notation so that it included zero and negative arrows. It is normally defined as <span class=\"math-container\" id=\"q_268\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"\\align*a\\uparrow b&amp;amp;=a^{b}\\\\\na\\uparrow^{n}b&amp;amp;=\\underbrace{a\\uparrow^{n-1}(a\\uparrow^{n-1}(\\dots(a%\n\\uparrow^{n-1}a)\\dots))}_{b\\text{copiesof}a}\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>{align*}</mtext> </merror> <mi>a</mi> <mo>\u2191</mo> <mi>b</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <mo>=</mo> <msup> <mi>a</mi> <mi>b</mi> </msup> <mi>a</mi> <msup> <mo>\u2191</mo> <mi>n</mi> </msup> <mi>b</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <mo>=</mo> <munder> <munder accentunder=\"true\"> <mrow> <mi>a</mi> <msup> <mo movablelimits=\"false\">\u2191</mo> <mrow> <mi>n</mi> <mo movablelimits=\"false\">-</mo> <mn>1</mn> </mrow> </msup> <mrow> <mo movablelimits=\"false\" stretchy=\"false\">(</mo> <mi>a</mi> <msup> <mo movablelimits=\"false\">\u2191</mo> <mrow> <mi>n</mi> <mo movablelimits=\"false\">-</mo> <mn>1</mn> </mrow> </msup> <mrow> <mo movablelimits=\"false\" stretchy=\"false\">(</mo> <mi mathvariant=\"normal\">\u2026</mi> <mrow> <mo movablelimits=\"false\" stretchy=\"false\">(</mo> <mi>a</mi> <msup> <mo movablelimits=\"false\">\u2191</mo> <mrow> <mi>n</mi> <mo movablelimits=\"false\">-</mo> <mn>1</mn> </mrow> </msup> <mi>a</mi> <mo movablelimits=\"false\" stretchy=\"false\">)</mo> </mrow> <mi mathvariant=\"normal\">\u2026</mi> <mo movablelimits=\"false\" stretchy=\"false\">)</mo> </mrow> <mo movablelimits=\"false\" stretchy=\"false\">)</mo> </mrow> </mrow> <mo movablelimits=\"false\">\u23df</mo> </munder> <mrow> <mi>b</mi> <mo>\u2062</mo> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>\\text</mtext> </merror> <mo>\u2062</mo> <mi>c</mi> <mo>\u2062</mo> <mi>o</mi> <mo>\u2062</mo> <mi>p</mi> <mo>\u2062</mo> <mi>i</mi> <mo>\u2062</mo> <mi>e</mi> <mo>\u2062</mo> <mi>s</mi> <mo>\u2062</mo> <mi>o</mi> <mo>\u2062</mo> <mi>f</mi> <mo>\u2062</mo> <mi>a</mi> </mrow> </munder> </mrow> </math></span> so, basically the hyperoperation sequence starting from exponentiation. For now, I will only consider <span class=\"math-container\" id=\"q_269\"><?xml version=\"1.0\" encoding=\"UTF-8\"?><math alttext=\"a,b&amp;gt;0\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow><mi>a</mi><mo>,</mo><mrow><mi>b</mi><mo>&gt;</mo></mrow><mn>0</mn></mrow></math></span>.</p> <p>If we try to go backwards from <span class=\"math-container\" id=\"q_270\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\uparrow b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2191</mo> <mi>b</mi> </mrow> </math></span>, the \"trivial\" extension (letting down arrows represent negative up arrows, because why the heck not) is: <span class=\"math-container\" id=\"q_271\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"\\align*a\\;b&amp;amp;=a\\cdot b\\\\\na\\downarrow b&amp;amp;=a+b\\\\\na\\downarrow\\downarrow b&amp;amp;=\\text{seebelow}\\\\\n\\vdots\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>{align*}</mtext> </merror> <mpadded width=\"+2.8pt\"> <mi>a</mi> </mpadded> <mi>b</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <mo>=</mo> <mi>a</mi> <mo>\u22c5</mo> <mi>b</mi> <mi>a</mi> <mo>\u2193</mo> <mi>b</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <mo>=</mo> <mi>a</mi> <mo>+</mo> <mi>b</mi> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <mo>=</mo> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>\\text</mtext> </merror> <mi>s</mi> <mi>e</mi> <mi>e</mi> <mi>b</mi> <mi>e</mi> <mi>l</mi> <mi>o</mi> <mi>w</mi> <mi mathvariant=\"normal\">\u22ee</mi> </mrow> </math></span> But I had trouble coming up with an expression for <span class=\"math-container\" id=\"q_272\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow\\downarrow b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> </mrow> </math></span>.</p> <p>Maybe it doesn't exist. Alternatively, maybe there is a way of defining <span class=\"math-container\" id=\"q_273\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\;b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mpadded width=\"+2.8pt\"> <mi>a</mi> </mpadded> <mo>\u2062</mo> <mi>b</mi> </mrow> </math></span> (zero arrows) such that it does exist. So my question is: <strong>Is there an extension of Knuth's up-arrow notation such that <span class=\"math-container\" id=\"q_274\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow^{n}b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <msup> <mo>\u2193</mo> <mi>n</mi> </msup> <mi>b</mi> </mrow> </math></span> exists for all <span class=\"math-container\" id=\"q_275\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"n\\geq 3\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>n</mi> <mo>\u2265</mo> <mn>3</mn> </mrow> </math></span>?</strong> <hr/> <strong>Edit</strong>: Welp, I messed this question up. I initially thought <span class=\"math-container\" id=\"q_276\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow b=a+1\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> <mo>=</mo> <mi>a</mi> <mo>+</mo> <mn>1</mn> </mrow> </math></span> was correct, but it is actually <span class=\"math-container\" id=\"q_277\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"b+1\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>b</mi> <mo>+</mo> <mn>1</mn> </mrow> </math></span>. So I thought I had an example of an extension when I did not. I have modified the question accordingly.</p> <p>An extension would define <span class=\"math-container\" id=\"q_278\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\uparrow^{n}b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <msup> <mo>\u2191</mo> <mi>n</mi> </msup> <mi>b</mi> </mrow> </math></span> for each <span class=\"math-container\" id=\"q_279\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"n\\leq 0\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>n</mi> <mo>\u2264</mo> <mn>0</mn> </mrow> </math></span> which satisfies the recursive definition of the notation.</p> <hr/> <p><strong>Edit 2</strong>: Okay, turns out <span class=\"math-container\" id=\"q_280\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow b=b+1\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> <mo>=</mo> <mi>b</mi> <mo>+</mo> <mn>1</mn> </mrow> </math></span> isn't correct either, as this would imply <span class=\"math-container\" id=\"q_281\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow b=a+b-1\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mi>b</mi> <mo>=</mo> <mrow> <mrow> <mi>a</mi> <mo>+</mo> <mi>b</mi> </mrow> <mo>-</mo> <mn>1</mn> </mrow> </mrow> </math></span>. For example, <span class=\"math-container\" id=\"q_282\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"4\\downarrow 3=4\\downarrow\\downarrow(4\\downarrow\\downarrow 4)=4\\downarrow%\n\\downarrow(4+1)=(4+1)+1=6=4+3-1\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mn>4</mn> <mo>\u2193</mo> <mn>3</mn> <mo>=</mo> <mn>4</mn> <mo>\u2193</mo> <mo>\u2193</mo> <mrow> <mo stretchy=\"false\">(</mo> <mn>4</mn> <mo>\u2193</mo> <mo>\u2193</mo> <mn>4</mn> <mo stretchy=\"false\">)</mo> </mrow> <mo>=</mo> <mn>4</mn> <mo>\u2193</mo> <mo>\u2193</mo> <mrow> <mo stretchy=\"false\">(</mo> <mn>4</mn> <mo>+</mo> <mn>1</mn> <mo stretchy=\"false\">)</mo> </mrow> <mo>=</mo> <mrow> <mo stretchy=\"false\">(</mo> <mn>4</mn> <mo>+</mo> <mn>1</mn> <mo stretchy=\"false\">)</mo> </mrow> <mo>+</mo> <mn>1</mn> <mo>=</mo> <mn>6</mn> <mo>=</mo> <mn>4</mn> <mo>+</mo> <mn>3</mn> <mo>-</mo> <mn>1</mn> </mrow> </math></span>. But it is really close; perhaps we need an exception, such as <span class=\"math-container\" id=\"q_283\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"\\align*a\\downarrow\\downarrow b=\\cases{b}+1&amp;amp;\\text{if}a&amp;lt;b\\\\\nb+2&amp;amp;\\text{if}a=b.\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>{align*}</mtext> </merror> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> <mo>=</mo> <mrow> <mo>{</mo> <mtable columnspacing=\"5pt\" displaystyle=\"true\"> <mtr> <mtd columnalign=\"left\"> <mi>b</mi> </mtd> <mtd></mtd> </mtr> </mtable> </mrow> <mo>+</mo> <mn>1</mn> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>\\text</mtext> </merror> <mi>i</mi> <mi>f</mi> <mi>a</mi> <mi mathvariant=\"normal\">&amp;</mi> <mi>l</mi> <mi>t</mi> <mo>;</mo> <mi>b</mi> <mi>b</mi> <mo>+</mo> <mn>2</mn> <mi mathvariant=\"normal\">&amp;</mi> <mi>a</mi> <mi>m</mi> <mi>p</mi> <mo>;</mo> <merror class=\"ltx_ERROR undefined undefined\"> <mtext>\\text</mtext> </merror> <mi>i</mi> <mi>f</mi> <mi>a</mi> <mo>=</mo> <mi>b</mi> <mo>.</mo> </mrow> </math></span> The case <span class=\"math-container\" id=\"q_284\"><?xml version=\"1.0\" encoding=\"UTF-8\"?><math alttext=\"a&amp;gt;b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow><mrow><mi>a</mi><mo>&gt;</mo></mrow><mi>b</mi></mrow></math></span> does not show up when evaluating <span class=\"math-container\" id=\"q_285\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mi>b</mi> </mrow> </math></span>, but it will be need to be defined if we try to extend further to <span class=\"math-container\" id=\"q_286\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow\\downarrow b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> </mrow> </math></span>. For instance, we could abuse the fact that the case <span class=\"math-container\" id=\"q_287\"><?xml version=\"1.0\" encoding=\"UTF-8\"?><math alttext=\"a&amp;gt;b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"><mrow><mrow><mi>a</mi><mo>&gt;</mo></mrow><mi>b</mi></mrow></math></span> is allowed to be anything, and let <span class=\"math-container\" id=\"q_288\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow b=b+1+\\left\\lfloor\\frac{a}{b}\\right\\rfloor,\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> <mo>=</mo> <mi>b</mi> <mo>+</mo> <mn>1</mn> <mo>+</mo> <mrow> <mo>\u230a</mo> <mfrac> <mi>a</mi> <mi>b</mi> </mfrac> <mo>\u230b</mo> </mrow> <mo>,</mo> </mrow> </math></span> but finding <span class=\"math-container\" id=\"q_289\"><?xml version=\"1.0\" encoding=\"UTF-8\"?> <math alttext=\"a\\downarrow\\downarrow\\downarrow b\" display=\"block\" xmlns=\"http://www.w3.org/1998/Math/MathML\"> <mrow> <mi>a</mi> <mo>\u2193</mo> <mo>\u2193</mo> <mo>\u2193</mo> <mi>b</mi> </mrow> </math></span> may be intractable as a result.</p>",
  "Title": "Extending Knuth up-arrow/hyperoperations to non-positive values",
  "Tags": "hyperoperation,ackermann-function"
}